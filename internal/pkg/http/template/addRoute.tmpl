{{ template "header" }}
{{ template "navigation" }}
{{ template "body" }}
                <div class="container bg-dark text-white sticky-top shadow offset-md-0 px-4 p-3">
                    <div class="row justify-content-start">
                        <h1 class="h2 fs-4">Add route</h1>
                    </div>
                </div>

                <div class="d-flex flex-column px-3 p-3">
                    <div id="liveAlertPlaceholder"></div>
                    {{ .csrfField }}
                    <form class="needs-validation" id="formElem">
                        <div class="row p-1">
                            <label for="method" class="form-label fs-5">Methods</label>
                            <div >
                                <div class="row row-cols-8">
                                    <div class="col mx-auto d-grid offset-md-0 p-1">
                                        <div class="form-check form-check-inline">
                                            <div class="form-check form-check-inline"><label class="checkbox-inline"><input type="checkbox" value="GET" checked>GET</label></div>
                                            <div class="form-check form-check-inline"><label class="checkbox-inline"><input type="checkbox" value="POST">POST</label></div>
                                            <div class="form-check form-check-inline"><label class="checkbox-inline"><input type="checkbox" value="OPTION">OPTION</label></div>
                                            <div class="form-check form-check-inline"><label class="checkbox-inline"><input type="checkbox" value="TRACE">TRACE</label></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row row-cols-8">
                                    <div class="col mx-auto d-grid offset-md-0 p-1">
                                        <div class="form-check form-check-inline">
                                            <div class="form-check form-check-inline"><label class="checkbox-inline"><input type="checkbox" value="PUT">PUT</label></div>
                                            <div class="form-check form-check-inline"><label class="checkbox-inline"><input type="checkbox" value="HEAD">HEAD</label></div>
                                            <div class="form-check form-check-inline"><label class="checkbox-inline"><input type="checkbox" value="DELETE">DELETE</label></div>
                                            <div class="form-check form-check-inline"><label class="checkbox-inline"><input type="checkbox" value="PATCH">PATCH</label></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row p-1">
                            <div class="input-group mb-1">
                                <span class="input-group-text sm-6 fs-6" id="inputGroup-sizing-lg">URL</span>
                                <input type="text" id="urlPath" name="urlPath" value="" placeholder="/exploit" required>
                            </div>
                        </div>

                        <div class="row col-md-7 p-1">
                            <div class="input-group mb-1">
                                <span class="input-group-text sm-6 fs-6">Headers</span>
                                <textarea class="form-control col-md-5" aria-label="headers" id="headers" name="headers" rows="10" placeholder="Content-Type: text/html; charset=utf-8
Content-Encoding: compress, gzip"></textarea>
                            </div>
                        </div>

                        <div class="row col-md-7 p-1">
                            <div class="input-group mb-1">
                                <span class="input-group-text sm-2 fs-6 p-4 px-6">Body</span>
                                <textarea class="form-control col-md-5" aria-label="body" id="body" name="body" rows="10" placeholder="&lt;html&gt;
  &lt;body&gt;
    &lt;p&gt;Hello&lt;/p&gt;
  &lt;/body
&lt;/html&gt;"></textarea>
                            </div>
                        </div>
                        <div class="row">
                            <span class="p-2 px-4">
                            <button type="submit" value="Submit" class="btn btn-success">Add Route</button>
                            </span>
                        </div>
                    </form>
                </div>

                <script>
                    var alertPlaceholder = document.getElementById('liveAlertPlaceholder');
                    var alertTrigger = document.getElementById('liveAlertBtn');

                    function alertMessage(message, type) {
                        let wrapper = document.createElement('div');
                        wrapper.innerHTML = '<div class="alert alert-' + type + ' alert-dismissible" role="alert">' + message + '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button></div>';

                        alertPlaceholder.append(wrapper);
                    }


                    const endpoint = '/api/v1/addRoute';

                    formElem.onsubmit = async (f) => {
                        f.preventDefault();

                        let formData = new FormData(formElem);

                        let csrfToken = formData.get('gorilla.csrf.Token')
                        let apiToken = formData.get('access-token')
                        let selected = Array.from(document.querySelectorAll('input[type="checkbox"]'))
                            .filter((checkbox) => checkbox.checked)
                            .map((checkbox) => checkbox.value);

                        formData.set('methods', btoa(selected));
                        formData.set('body', btoa(formData.get('body')));
                        formData.set('headers', btoa(formData.get('headers')));

                        let response = await fetch(endpoint, {
                            method: 'POST',
                            headers: {
                                'X-CSRF-Token': csrfToken,
                                'Authorization': 'Bearer {{ index . "AccessToken" }}'
                            },
                            body: formData
                        });

                        let result = await response.json();

                        if (result.status == "OK") {
                            alertMessage("Route successfully added!", "success");
                        } else {
                            alertMessage("Failed to add route!", "danger");
                        }

                    };
                </script>

{{ template "footer" }}